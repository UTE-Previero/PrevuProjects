<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACKNOWLEDGE" xml:space="preserve">
    <value>Acknowledge</value>
  </data>
  <data name="ACKNOWLEDGE ALL" xml:space="preserve">
    <value>Acknowledge All</value>
  </data>
  <data name="ACTIVE" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ACTUAL" xml:space="preserve">
    <value>Actual</value>
  </data>
  <data name="ADD" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CHANGE WIRELESS CARD" xml:space="preserve">
    <value>Change Wireless Card</value>
  </data>
  <data name="CHOOSE DATE" xml:space="preserve">
    <value>Choose Date</value>
  </data>
  <data name="CHOOSE THE ACTION" xml:space="preserve">
    <value>Choose the action</value>
  </data>
  <data name="CHOOSE TRENDS" xml:space="preserve">
    <value>Choose Trends</value>
  </data>
  <data name="CLEAR ALL" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="COMMANDS" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="COMPONENT NAME" xml:space="preserve">
    <value>Component Name</value>
  </data>
  <data name="COMPONENTS" xml:space="preserve">
    <value>Components</value>
  </data>
  <data name="CONFIRM" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="COPY FROM USER" xml:space="preserve">
    <value>Copy from User</value>
  </data>
  <data name="CREATE NEW USER" xml:space="preserve">
    <value>Create New User</value>
  </data>
  <data name="CURRENT EVENTS" xml:space="preserve">
    <value>Current Events</value>
  </data>
  <data name="DATE" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DELETE" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DELETE USER" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="DISABLE" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="EMAIL" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EMERGENCY BUTTON PRESSED" xml:space="preserve">
    <value>Emergency Button Pressed</value>
  </data>
  <data name="END TIME" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="EVENTS" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="FAULTS" xml:space="preserve">
    <value>Faults</value>
  </data>
  <data name="FULL NAME" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="GRINDING" xml:space="preserve">
    <value>Grinding</value>
  </data>
  <data name="GROUPS" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="INFO" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="LOGGED" xml:space="preserve">
    <value>Logged</value>
  </data>
  <data name="MACHINE MAP" xml:space="preserve">
    <value>Machine Map</value>
  </data>
  <data name="MAINTENANCE" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="MANAGE USER" xml:space="preserve">
    <value>Manage User</value>
  </data>
  <data name="MESSAGES" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="NO ALARMS OR MESSAGES" xml:space="preserve">
    <value>No Alarms or Messages</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OPEN LOCAL DISCONNECT" xml:space="preserve">
    <value>Open Local Disconnect</value>
  </data>
  <data name="OTHER" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PARAMETERS" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="PET_CLEAR" xml:space="preserve">
    <value>Clear PET</value>
  </data>
  <data name="PHONE NUMBER" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PLACE THE NEW CARD ON THE READER" xml:space="preserve">
    <value>Place the New Card on the Reader</value>
  </data>
  <data name="PLANT CONTROL" xml:space="preserve">
    <value>Plant Control</value>
  </data>
  <data name="PLANT LINE 2" xml:space="preserve">
    <value>Plant Line 2</value>
  </data>
  <data name="PLC" xml:space="preserve">
    <value>PLC</value>
  </data>
  <data name="PRODUCTION" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="PRODUCTION LINE" xml:space="preserve">
    <value>Production Line</value>
  </data>
  <data name="RESET" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SEARCH" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SELECT COMPONENTS" xml:space="preserve">
    <value>Select Components</value>
  </data>
  <data name="SELECT OPERATING MODE" xml:space="preserve">
    <value>Select Operating Mode</value>
  </data>
  <data name="START" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="START PROCESS" xml:space="preserve">
    <value>Start Process</value>
  </data>
  <data name="START TIME" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="STOP" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="SWITCH VIEW" xml:space="preserve">
    <value>Switch View</value>
  </data>
  <data name="SYNOPTIC PAGE MISSING!" xml:space="preserve">
    <value>Synoptic page missing!</value>
  </data>
  <data name="SYSTEM PERMISSIONS" xml:space="preserve">
    <value>System Permissions</value>
  </data>
  <data name="TRENDS" xml:space="preserve">
    <value>Trends</value>
  </data>
  <data name="UNDO" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="USER MANAGEMENT" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="USER NAME" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="USERS" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="_SYS_24VPWR_CAB_OFF" xml:space="preserve">
    <value>_SYS_24VPWR_CAB_OFF</value>
    <comment>Fault</comment>
  </data>
  <data name="VIEW" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="WIRELESS CARD" xml:space="preserve">
    <value>Wireless Card</value>
  </data>
</root>